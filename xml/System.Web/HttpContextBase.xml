<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <TypeSignature Language="F#" Value="type HttpContextBase = class&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Abstractions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class. The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline. When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.  
  
 The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class. The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class. At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" FrameworkAlternate="netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes the class for use by an inherited class instance. This constructor can only be called by an inherited class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest userFunc" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="userFunc">The user function.</param>
        <summary>When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit&#xA;override this.AcceptWebSocketRequest : Func&lt;System.Web.WebSockets.AspNetWebSocketContext, System.Threading.Tasks.Task&gt; * System.Web.WebSockets.AspNetWebSocketOptions -&gt; unit" Usage="httpContextBase.AcceptWebSocketRequest (userFunc, options)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="userFunc">The user function.</param>
        <param name="options">The options object.</param>
        <summary>When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member AddError : Exception -&gt; unit&#xA;override this.AddError : Exception -&gt; unit" Usage="httpContextBase.AddError errorInfo" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="errorInfo">The exception to add to the exception collection.</param>
        <summary>When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken&#xA;override this.AddOnRequestCompleted : Action&lt;System.Web.HttpContextBase&gt; -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.AddOnRequestCompleted callback" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="callback">The HTTP context object.</param>
        <summary>When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</summary>
        <returns>The subscription token.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AllErrors : Exception[]" Usage="System.Web.HttpContextBase.AllErrors" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</summary>
        <value>An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AllowAsyncDuringSyncStages : bool with get, set" Usage="System.Web.HttpContextBase.AllowAsyncDuringSyncStages" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</summary>
        <value>
          <see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />. The default value is <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Application : System.Web.HttpApplicationStateBase" Usage="System.Web.HttpContextBase.Application" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</summary>
        <value>The application state object for the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ApplicationInstance : System.Web.HttpApplication with get, set" Usage="System.Web.HttpContextBase.ApplicationInstance" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</summary>
        <value>The object for the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.AsyncPreloadMode : System.Web.Configuration.AsyncPreloadModeFlags with get, set" Usage="System.Web.HttpContextBase.AsyncPreloadMode" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</summary>
        <value>An object that contains flags that pertain to asynchronous preload mode.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Cache : System.Web.Caching.Cache" Usage="System.Web.HttpContextBase.Cache" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</summary>
        <value>The cache for the current application domain.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ClearError : unit -&gt; unit&#xA;override this.ClearError : unit -&gt; unit" Usage="httpContextBase.ClearError " FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When overridden in a derived class, clears all errors for the current HTTP request.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CurrentHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.CurrentHandler" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</summary>
        <value>An object that represents the currently executing handler.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.CurrentNotification : System.Web.RequestNotification" Usage="System.Web.HttpContextBase.CurrentNotification" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</summary>
        <value>One of the <see cref="T:System.Web.RequestNotification" /> values.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken&#xA;override this.DisposeOnPipelineCompleted : IDisposable -&gt; System.Web.ISubscriptionToken" Usage="httpContextBase.DisposeOnPipelineCompleted target" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="target">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</param>
        <summary>When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</summary>
        <returns>The subscription token.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Error : Exception" Usage="System.Web.HttpContextBase.Error" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</summary>
        <value>The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>When overridden in a derived class, gets an application-level resource.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="resourceKey" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
        <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</param>
        <summary>When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
        <returns>The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetGlobalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetGlobalResourceObject (classKey, resourceKey, culture)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="resourceKey" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="classKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</param>
        <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</param>
        <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</param>
        <summary>When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
        <returns>The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>When overridden in a derived class, gets a page-level resource.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string -&gt; obj&#xA;override this.GetLocalResourceObject : string * string -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="resourceKey" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
        <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</param>
        <summary>When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</summary>
        <returns>The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj&#xA;override this.GetLocalResourceObject : string * string * System.Globalization.CultureInfo -&gt; obj" Usage="httpContextBase.GetLocalResourceObject (virtualPath, resourceKey, culture)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="resourceKey" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="virtualPath">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</param>
        <param name="resourceKey">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</param>
        <param name="culture">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</param>
        <summary>When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
        <returns>The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetSection : string -&gt; obj&#xA;override this.GetSection : string -&gt; obj" Usage="httpContextBase.GetSection sectionName" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sectionName">The configuration section path (in XPath format) and the configuration element name.</param>
        <summary>When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</summary>
        <returns>The specified section, or <see langword="null" /> if the section does not exist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="httpContextBase.GetService serviceType" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="serviceType">The type of service object to get.</param>
        <summary>When overridden in a derived class, returns an object for the current service type.</summary>
        <returns>The current service type, or <see langword="null" /> if no service is found.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Handler : System.Web.IHttpHandler with get, set" Usage="System.Web.HttpContextBase.Handler" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</summary>
        <value>The object that is responsible for processing the HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsCustomErrorEnabled : bool" Usage="System.Web.HttpContextBase.IsCustomErrorEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</summary>
        <value>
          <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsDebuggingEnabled : bool" Usage="System.Web.HttpContextBase.IsDebuggingEnabled" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</summary>
        <value>
          <see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsPostNotification : bool" Usage="System.Web.HttpContextBase.IsPostNotification" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</summary>
        <value>
          <see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequest" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</summary>
        <value>
          <see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequestUpgrading : bool" Usage="System.Web.HttpContextBase.IsWebSocketRequestUpgrading" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</summary>
        <value>
          <see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.IDictionary" Usage="System.Web.HttpContextBase.Items" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</summary>
        <value>A key/value collection that provides access to an individual value in the collection by using a specified key.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.PageInstrumentation : System.Web.Instrumentation.PageInstrumentationService" Usage="System.Web.HttpContextBase.PageInstrumentation" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</summary>
        <value>The page-instrumentation service instance for this request.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.PreviousHandler : System.Web.IHttpHandler" Usage="System.Web.HttpContextBase.PreviousHandler" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</summary>
        <value>An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Profile : System.Web.Profile.ProfileBase" Usage="System.Web.HttpContextBase.Profile" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</summary>
        <value>If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RemapHandler : System.Web.IHttpHandler -&gt; unit&#xA;override this.RemapHandler : System.Web.IHttpHandler -&gt; unit" Usage="httpContextBase.RemapHandler handler" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="handler">The object that should process the request.</param>
        <summary>When overridden in a derived class, specifies a handler for the request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you set `handler` to `null`, the default handler is used to process the request. You can set `handler` to either an asynchronous handler or to an synchronous handler. The handler must implement the <xref:System.Web.IHttpHandler> interface.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">A derived type fails to implement this method.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Request : System.Web.HttpRequestBase" Usage="System.Web.HttpContextBase.Request" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</summary>
        <value>The current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Response : System.Web.HttpResponseBase" Usage="System.Web.HttpContextBase.Response" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</summary>
        <value>The current HTTP response.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string -&gt; unit&#xA;override this.RewritePath : string -&gt; unit" Usage="httpContextBase.RewritePath path" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path">The replacement path.</param>
        <summary>When overridden in a derived class, rewrites the URL by using the specified path.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * bool -&gt; unit&#xA;override this.RewritePath : string * bool -&gt; unit" Usage="httpContextBase.RewritePath (path, rebaseClientPath)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="path">The replacement path.</param>
        <param name="rebaseClientPath">
          <see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</param>
        <summary>When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string -&gt; unit&#xA;override this.RewritePath : string * string * string -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="pathInfo" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="queryString" Type="System.String" Index="2" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePath">The replacement path.</param>
        <param name="pathInfo">Additional path information for a resource.</param>
        <param name="queryString">The request query string.</param>
        <summary>When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member RewritePath : string * string * string * bool -&gt; unit&#xA;override this.RewritePath : string * string * string * bool -&gt; unit" Usage="httpContextBase.RewritePath (filePath, pathInfo, queryString, setClientFilePath)" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="pathInfo" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="queryString" Type="System.String" Index="2" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="filePath">The replacement path.</param>
        <param name="pathInfo">Additional path information for a resource.</param>
        <param name="queryString">The request query string.</param>
        <param name="setClientFilePath">
          <see langword="true" /> to set the file path used for client resources to the value of the <paramref name="filePath" /> parameter; otherwise, <see langword="false" />.</param>
        <summary>When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Server : System.Web.HttpServerUtilityBase" Usage="System.Web.HttpContextBase.Server" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</summary>
        <value>The server utility object for the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Session : System.Web.HttpSessionStateBase" Usage="System.Web.HttpContextBase.Session" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</summary>
        <value>The session-state object for the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit&#xA;override this.SetSessionStateBehavior : System.Web.SessionState.SessionStateBehavior -&gt; unit" Usage="httpContextBase.SetSessionStateBehavior sessionStateBehavior" FrameworkAlternate="netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior">One of the enumeration values that specifies what type of session state behavior is required.</param>
        <summary>When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type. ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">A derived type fails to implement this method.</exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.SkipAuthorization : bool with get, set" Usage="System.Web.HttpContextBase.SkipAuthorization" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</summary>
        <value>
          <see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.ThreadAbortOnTimeout : bool with get, set" Usage="System.Web.HttpContextBase.ThreadAbortOnTimeout" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</summary>
        <value>
          <see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />. The default is <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Timestamp : DateTime" Usage="System.Web.HttpContextBase.Timestamp" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the initial timestamp of the current HTTP request.</summary>
        <value>The timestamp of the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.Trace : System.Web.TraceContext" Usage="System.Web.HttpContextBase.Trace" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</summary>
        <value>The trace object for the current HTTP response.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.User : System.Security.Principal.IPrincipal with get, set" Usage="System.Web.HttpContextBase.User" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When overridden in a derived class, gets or sets security information for the current HTTP request.</summary>
        <value>An object that contains security information for the current HTTP request.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Always.</exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.WebSocketNegotiatedProtocol : string" Usage="System.Web.HttpContextBase.WebSocketNegotiatedProtocol" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</summary>
        <value>The negotiated protocol.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" FrameworkAlternate="netframework-4.8" />
      <MemberSignature Language="F#" Value="member this.WebSocketRequestedProtocols : System.Collections.Generic.IList&lt;string&gt;" Usage="System.Web.HttpContextBase.WebSocketRequestedProtocols" FrameworkAlternate="netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Abstractions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</summary>
        <value>The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>